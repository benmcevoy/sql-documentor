<Window x:Class="SQLDocumentor.DiagramRenderer.DiagramView"
             xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
             xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml"
             xmlns:mc="http://schemas.openxmlformats.org/markup-compatibility/2006" 
             xmlns:d="http://schemas.microsoft.com/expression/blend/2008" 
             xmlns:graphsharp="clr-namespace:GraphSharp.Controls;assembly=GraphSharp.Controls"
            xmlns:Converters="clr-namespace:GraphSharp.Converters;assembly=GraphSharp.Controls"
             xmlns:zoom="clr-namespace:WPFExtensions.Controls;assembly=WPFExtensions"
            xmlns:model="clr-namespace:SQLDocumentor.Model;assembly=SQLDocumentor.Model"
            xmlns:g="clr-namespace:SQLDocumentor.DiagramRenderer.Graph"
            xmlns:c="clr-namespace:SQLDocumentor.DiagramRenderer.Converter"
             x:Name="self"
             mc:Ignorable="d" 
             d:DesignHeight="300" d:DesignWidth="300">
    <Window.Resources>
        <ResourceDictionary>
            <ResourceDictionary.MergedDictionaries>
                <ResourceDictionary Source="LayoutParameterTemplates.xaml" />
            </ResourceDictionary.MergedDictionaries>

            <DataTemplate x:Key="tableTemplate" DataType="{x:Type model:Table}">

                <Grid>
                    <Grid.RowDefinitions>
                        <RowDefinition Height="28" />
                        <RowDefinition Height="*" />
                    </Grid.RowDefinitions>

                    <Border Grid.Row="0" CornerRadius="5,5,0,0" Background="#FFF6F6F4" Padding="3">
                        <TextBlock   Text="{Binding Path=Name, Mode=OneWay}" Foreground="#FF82C55B"  FontSize="16" />
                    </Border>
                    <ItemsControl Grid.Row="1" ItemsSource="{Binding Parameters}" >
                        <ItemsControl.ItemTemplate>
                            <DataTemplate>
                                <TextBlock Padding="3,0,3,3" Text="{Binding}" />
                            </DataTemplate>
                        </ItemsControl.ItemTemplate>
                    </ItemsControl>
                </Grid>
                <!-- TODO: this would be nice to have an icon -->
                <!--<DataTemplate.Triggers>
                <DataTrigger Binding="{Binding IsPrimaryKey}" Value="false">
                    <Setter TargetName="img" Property="Source"
                        Value="../Images/pk.ico" />
                </DataTrigger>
            </DataTemplate.Triggers>-->
            </DataTemplate>

            <Style TargetType="{x:Type graphsharp:VertexControl}">
                <Setter Property="Template">
                    <Setter.Value>
                        <ControlTemplate TargetType="{x:Type graphsharp:VertexControl}">
                            <Border BorderBrush="#FFC7C2BA"
                                Background="White"
                                BorderThickness="1"
                                CornerRadius="5"
                                Padding="{TemplateBinding Padding}">
                                <ContentPresenter Content="{TemplateBinding Vertex}"
                                     ContentTemplate="{StaticResource tableTemplate}"/>

                                <Border.Effect>
                                    <DropShadowEffect BlurRadius="1" Color="#FFF6F6F4"
                                        Opacity="0.3" Direction="315"/>
                                </Border.Effect>
                            </Border>
                        </ControlTemplate>
                    </Setter.Value>
                </Setter>
            </Style>

            <Converters:EdgeRouteToPathConverter x:Key="routeToPathConverter" />
            <c:EdgeLabelLeftConverter x:Key="edgeLabelLeftConverter" />
            <c:EdgeLabelTopConverter x:Key="edgeLabelTopConverter" />

            <Style TargetType="{x:Type graphsharp:EdgeControl}">
                <Setter Property="Template">
                    <Setter.Value>
                        <ControlTemplate TargetType="{x:Type graphsharp:EdgeControl}">
                            <Canvas>
                                <Path Stroke="{TemplateBinding Foreground}"
                                  StrokeThickness="2"
                                  MinWidth="1"
                                  MinHeight="1"
                                  x:Name="edgePath">
                                    <Path.Data>
                                        <PathGeometry>
                                            <PathGeometry.Figures>
                                                <MultiBinding Converter="{StaticResource routeToPathConverter}">
                                                    <Binding RelativeSource="{RelativeSource TemplatedParent}"
                                                 Path="Source.(graphsharp:GraphCanvas.X)" />
                                                    <Binding RelativeSource="{RelativeSource TemplatedParent}"
                                                 Path="Source.(graphsharp:GraphCanvas.Y)" />
                                                    <Binding RelativeSource="{RelativeSource TemplatedParent}"
                                                 Path="Source.ActualWidth" />
                                                    <Binding RelativeSource="{RelativeSource TemplatedParent}"
                                                 Path="Source.ActualHeight" />
                                                    <Binding RelativeSource="{RelativeSource TemplatedParent}"
                                                 Path="Target.(graphsharp:GraphCanvas.X)" />
                                                    <Binding RelativeSource="{RelativeSource TemplatedParent}"
                                                 Path="Target.(graphsharp:GraphCanvas.Y)" />
                                                    <Binding RelativeSource="{RelativeSource TemplatedParent}"
                                                 Path="Target.ActualWidth" />
                                                    <Binding RelativeSource="{RelativeSource TemplatedParent}"
                                                 Path="Target.ActualHeight" />
                                                    <Binding RelativeSource="{RelativeSource TemplatedParent}"
                                                 Path="RoutePoints" />
                                                </MultiBinding>
                                            </PathGeometry.Figures>
                                        </PathGeometry>
                                    </Path.Data>
                                </Path>

                                <!-- TODO: this should be controlled by RenderOptions.  
                                        Also if there are multiple keys then they all appear in the same spot on top of each other-->
                                
                                <!--<TextBlock Text="{Binding Path=Edge.Relationship, RelativeSource={RelativeSource TemplatedParent}}">
                                    <Canvas.Left>
                                        <MultiBinding Converter="{StaticResource edgeLabelLeftConverter}">
                                            <Binding RelativeSource="{RelativeSource TemplatedParent}"
                                            Path="Source.(graphsharp:GraphCanvas.X)" />
                                            <Binding RelativeSource="{RelativeSource TemplatedParent}"
                                            Path="Source.(graphsharp:GraphCanvas.Y)" />
                                            <Binding RelativeSource="{RelativeSource TemplatedParent}"
                                            Path="Source.ActualWidth" />
                                            <Binding RelativeSource="{RelativeSource TemplatedParent}"
                                            Path="Source.ActualHeight" />
                                            <Binding RelativeSource="{RelativeSource TemplatedParent}"
                                            Path="Target.(graphsharp:GraphCanvas.X)" />
                                            <Binding RelativeSource="{RelativeSource TemplatedParent}"
                                            Path="Target.(graphsharp:GraphCanvas.Y)" />
                                            <Binding RelativeSource="{RelativeSource TemplatedParent}"
                                            Path="Target.ActualWidth" />
                                            <Binding RelativeSource="{RelativeSource TemplatedParent}"
                                            Path="Target.ActualHeight" />
                                            <Binding RelativeSource="{RelativeSource TemplatedParent}"
                                            Path="RoutePoints" />
                                        </MultiBinding>
                                    </Canvas.Left>
                                    
                                    <Canvas.Top>
                                         <MultiBinding Converter="{StaticResource edgeLabelTopConverter}">
                                            <Binding RelativeSource="{RelativeSource TemplatedParent}"
                                            Path="Source.(graphsharp:GraphCanvas.X)" />
                                            <Binding RelativeSource="{RelativeSource TemplatedParent}"
                                            Path="Source.(graphsharp:GraphCanvas.Y)" />
                                            <Binding RelativeSource="{RelativeSource TemplatedParent}"
                                            Path="Source.ActualWidth" />
                                            <Binding RelativeSource="{RelativeSource TemplatedParent}"
                                            Path="Source.ActualHeight" />
                                            <Binding RelativeSource="{RelativeSource TemplatedParent}"
                                            Path="Target.(graphsharp:GraphCanvas.X)" />
                                            <Binding RelativeSource="{RelativeSource TemplatedParent}"
                                            Path="Target.(graphsharp:GraphCanvas.Y)" />
                                            <Binding RelativeSource="{RelativeSource TemplatedParent}"
                                            Path="Target.ActualWidth" />
                                            <Binding RelativeSource="{RelativeSource TemplatedParent}"
                                            Path="Target.ActualHeight" />
                                            <Binding RelativeSource="{RelativeSource TemplatedParent}"
                                            Path="RoutePoints" />
                                        </MultiBinding>
                                    </Canvas.Top>
                                </TextBlock>-->
                            </Canvas>
                        </ControlTemplate>
                    </Setter.Value>
                </Setter>
                <Setter Property="graphsharp:GraphElementBehaviour.HighlightTrigger"
                Value="{Binding RelativeSource={RelativeSource Self}, Path=IsMouseOver}" />
                <Setter Property="MinWidth" Value="1" />
                <Setter Property="MinHeight" Value="1" />
                <Setter Property="Background" Value="Red" />
                <Setter Property="Foreground" Value="Silver" />
                <Setter Property="Opacity" Value="0.5" />
                <Style.Triggers>
                    <Trigger Property="graphsharp:GraphElementBehaviour.IsHighlighted"
                     Value="True">
                        <Setter Property="Foreground"
                        Value="Black" />
                    </Trigger>
                    <Trigger Property="graphsharp:GraphElementBehaviour.IsSemiHighlighted"
                     Value="True">
                        <Setter Property="Foreground"
                        Value="Yellow" />
                    </Trigger>
                    <MultiTrigger>
                        <MultiTrigger.Conditions>
                            <Condition Property="graphsharp:GraphElementBehaviour.IsSemiHighlighted"
                               Value="True" />
                            <Condition Property="graphsharp:GraphElementBehaviour.SemiHighlightInfo"
                               Value="InEdge" />
                        </MultiTrigger.Conditions>
                        <Setter Property="Foreground"
                        Value="Red" />
                    </MultiTrigger>
                    <MultiTrigger>
                        <MultiTrigger.Conditions>
                            <Condition Property="graphsharp:GraphElementBehaviour.IsSemiHighlighted"
                               Value="True" />
                            <Condition Property="graphsharp:GraphElementBehaviour.SemiHighlightInfo"
                               Value="OutEdge" />
                        </MultiTrigger.Conditions>
                        <Setter Property="Foreground"
                        Value="Blue" />
                    </MultiTrigger>
                </Style.Triggers>
            </Style>
        </ResourceDictionary>

    </Window.Resources>

    <Grid>
        <Grid.ColumnDefinitions>
            <ColumnDefinition />
            <ColumnDefinition />
        </Grid.ColumnDefinitions>
        <Grid.RowDefinitions>
            <RowDefinition Height="Auto" MinHeight="100"/>
            <RowDefinition Height="*"/>
        </Grid.RowDefinitions>

        <Border Grid.Row="0" Grid.ColumnSpan="2">
            <TextBlock Text="SQL Diagram Renderer" FontSize="32" Padding="10"  Foreground="#FF82C55B" Background="#FFF6F6F4" />
        </Border>

        <StackPanel Grid.Row="0" Grid.Column="0" Orientation="Horizontal" VerticalAlignment="Bottom" Margin="10" Height="24">
            
            <StackPanel Orientation="Horizontal">
                <Label Content="Layout:"/>
                <ComboBox x:Name="LayoutType">
                    <ComboBox.Items>
                        <ComboBoxItem >Circular</ComboBoxItem>
                        <ComboBoxItem>Tree</ComboBoxItem>
                        <ComboBoxItem>FR</ComboBoxItem>
                        <ComboBoxItem>BoundedFR</ComboBoxItem>
                        <ComboBoxItem>KK</ComboBoxItem>
                        <ComboBoxItem>ISOM</ComboBoxItem>
                        <ComboBoxItem >LinLog</ComboBoxItem>
                        <ComboBoxItem IsSelected="true">EfficientSugiyama</ComboBoxItem>
                        <ComboBoxItem>CompoundFDP</ComboBoxItem>
                    </ComboBox.Items>
                </ComboBox>
            </StackPanel>
            
            <Button Content="Relayout" Click="Button_Click" />
            
            <Button Content="Save as PNG" Click="SavePNG_Click" />
        </StackPanel>

        <StackPanel Grid.Row="0" Grid.Column="1" Margin="10,0" Orientation="Horizontal">

            <GroupBox Header="Layout algorithm parameters"
										Content="{Binding Path=LayoutParameters, ElementName=graphLayout}" />

            <GroupBox Header="Overlap removal parameters"
										Content="{Binding Path=OverlapRemovalParameters, ElementName=graphLayout}" />
            <StackPanel>
                <GroupBox Header="Edge routing parameters"
										Content="{Binding Path=EdgeRoutingParameters, ElementName=graphLayout}" />
            </StackPanel>
        </StackPanel>



        <zoom:ZoomControl Grid.Row="1" Grid.ColumnSpan="2" Margin="10">
            <g:TableLayout x:Name="graphLayout" Background="White"
                                    Graph="{Binding Path=GraphToVisualize, ElementName=self}"
                                    LayoutAlgorithmType="{Binding Path=Text, ElementName=LayoutType}"
                                    OverlapRemovalAlgorithmType="FSA"
                                    HighlightAlgorithmType="Simple" />

        </zoom:ZoomControl>
    </Grid>
</Window>